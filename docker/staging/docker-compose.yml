version: '3.9'
networks:
  datasource:
    name: dev-datasource_network
  server:
    name: dev-nextjsapp_network
  apps:
    name: applications_network
volumes:
  db:
    name: dev-postgres_database_storage
  nextjs-app-build:
    name: dev-nextjs_build_directory
  qbittorrent-conf:
    name: qbittorrent-config
  sonarr-conf:
    name: sonarr-config
  radarr-conf:
    name: radarr-config
  overseerr-conf:
    name: overseerr-config
  plex-conf:
    name: plex-config
  plex-transcode:
    name: plex-transcode
  jackett-conf:
    name: jackett-config
  jackett-blackhole:
    name: jackett-blackhole
  jenkins:
    name: jenkins-data
  open-appsec:
    name: open-appsec-data
services:
  postgres:
    container_name: dev-postgresql
    image: postgres:15.4
    ports:
      - '${DATABASE_PORT}:5432'
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PWD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - datasource
  adminer:
    container_name: dev-database_monitor
    image: adminer
    ports:
      - '8090:8080'
    networks:
      - datasource
      - server
  nextjs-app:
    container_name: dev-nextjs_app
    build:
      context: ../../
      dockerfile: docker/production/app/Dockerfile
    image: ravenz_next_server
    env_file: .env
    ports:
      - "${EXTERNAL_PORT:-3000}:3000"
    volumes:
      - nextjs-app-build:/app
    depends_on:
      - postgres
    networks:
      - datasource
      - server
      - apps
  nginx:
    container_name: dev-nginx
    ipc: host
    build:
      context: nginx
      dockerfile: Dockerfile
    image: ravenz_nginx_server
    ports:
      - '80:80'
    links:
      - nextjs-app
    environment:
      - NEXTJS_CONTAINER_IP=nextjs-app
      - QBITTORENT_CONTAINER_ID=qbittorrent
      - SONARR_CONTAINER_ID=sonarr
      - RADARR_CONTAINER_ID=radarr
      - OVERSEERR_CONTAINER_ID=overseerr
      - JACKETT_CONTAINER_ID=jackett
      - ADMINER_CONTAINER_ID=adminer
    command: [ 'sh', '/etc/nginx/convert-nginx.sh' ]
    depends_on:
      - nextjs-app
    networks:
      - server
      - apps
  open-appsec-agent:
    container_name: open-appsec-agent
    image: ghcr.io/openappsec/agent:latest
    ipc: host
    volumes:
      - ./volumes/open-appsec/configs:/etc/cp/conf:rw
      - ./volumes/open-appsec/data:/etc/cp/data:rw
      - ./volumes/open-appsec/agent-logs:/var/log/nano_agent:rw
      - /dev/shm/:/dev/shm/:rw
    environment:
      - user_email=kevingom43@gmail.com
    command: /cp-nano-agent --token ${OPEN_APPSEC_TOKEN}

  # qbittorrent:
  #   container_name: dev-qbittorrent
  #   image: lscr.io/linuxserver/qbittorrent:latest
  #   ports:
  #     - '8080:8080'
  #     - 6881:6881
  #     - 6881:6881/udp
  #   restart: unless-stopped
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Etc/UTC
  #     - WEBUI_PORT=8080
  #   volumes:
  #     - qbittorrent-conf:/config
  #     - '$HOME/QbitTorrentDownloads:/downloads'
  #   networks:
  #     - apps
  # sonarr:
  #   container_name: dev-sonarr
  #   image: lscr.io/linuxserver/sonarr:latest
  #   ports:
  #     - '8081:8989'
  #   restart: unless-stopped
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Etc/UTC
  #   volumes:
  #     - sonarr-conf:/config
  #     - '$HOME/TV-Series:/tv'
  #     - '$HOME/QbitTorrentDownloads:/downloads'
  #   networks:
  #     - apps
  # radarr:
  #   container_name: dev-radarr
  #   image: lscr.io/linuxserver/radarr:latest
  #   ports:
  #     - '8082:8989'
  #   restart: unless-stopped
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Etc/UTC
  #   volumes:
  #     - radarr-conf:/config
  #     - '$HOME/Movies:/movies'
  #     - '$HOME/QbitTorrentDownloads:/downloads'
  #   networks:
  #     - apps
  # overseerr:
  #   container_name: dev-overseerr
  #   image: sctx/overseerr
  #   ports:
  #     - '8083:5055'
  #   restart: unless-stopped
  #   environment:
  #     - LOG-LEVEL=debug
  #     - TZ=Asia/Tokyo
  #   volumes:
  #     - overseerr-conf:/app/config
  #   networks:
  #     - apps
  # plex:
  #   container_name: dev-plex
  #   image: plexinc/pms-docker
  #   ports:
  #     - 8084:32400/tcp
  #     - 8324:8324/tcp
  #     - 32469:32469/tcp
  #     - 1900:1900/udp
  #     - 32410:32410/udp
  #     - 32412:32412/udp
  #     - 32413:32413/udp
  #     - 32414:32414/udp
  #   restart: unless-stopped
  #   environment:
  #     - TZ=Asia/Ho_Chi_Minh
  #     - PLEX_CLAIM=claim-oZfGBvSJFy1vdys5mpPj
  #     - ADVERTISE_IP=http://192.168.1.151:8084
  #   hostname: RavenZ
  #   volumes:
  #     - plex-conf:/config
  #     - plex-transcode:/transcode
  #     - '$HOME/Movies:/movies'
  #     - '$HOME/TV-Series:/tv'
  #   networks:
  #     - apps
  # jackett:
  #   container_name: dev-jackett
  #   image: lscr.io/linuxserver/jackett:latest
  #   ports:
  #     - '8085:9117'
  #   restart: unless-stopped
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Etc/UTC
  #   volumes:
  #     - jackett-conf:/config
  #     - jackett-blackhole:/downloads
  #   networks:
  #     - apps
